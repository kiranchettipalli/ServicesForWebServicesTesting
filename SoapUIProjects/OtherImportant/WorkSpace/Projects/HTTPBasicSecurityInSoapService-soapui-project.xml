<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="d54e772c-9112-42ae-8a02-d9aa5f6beafc" activeEnvironment="Default" name="HTTPBasicSecurityInSoapService" resourceRoot="" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="a3d51e02-3fb5-45f4-907c-6ef3bc2e1c42" wsaVersion="NONE" name="ICart" type="wsdl" bindingName="{http://www.parasoft.com/wsdl/store-02/}ICart" soapVersion="1_1" anonymous="optional" definition="http://soaptest.parasoft.com/store-02.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://soaptest.parasoft.com/store-02.wsdl"><con:part><con:url>http://soaptest.parasoft.com/store-02.wsdl</con:url><con:content><![CDATA[<!--getItemById(int) - returns the book entry with the given item id. Currently valid values are 1, 2, 3, 4, 5 and 6.

getItemByTitle(String) - returns a list of Book objects that matched your title search query. The item price value which is returned by this operation increases by $1.00 every 5 invocations.
Example keywords: linux, java, C++, program. Leave it blank to get ALL the books in the database.

placeOrder(int, int) - takes an item id and a quantity, returns an "Order" object which includes a Book object, quantity and a unique order number.

getPendingOrders() - returns a list of orders that have been submitted using placeOrder(int, int) so far.

removeOrder(int) - takes an order number and removes it from the pending orders and returns a string with a result message (success or failure, etc.). As you might expect, the order numbers it takes successfuly are the same as the ones returned by placeOrder(int, int).

confirm() - confirms the currently pending orders. subsequent calls to getPendingOrders(int, int) or removeOrder(int) will result in nothing.

addNewItem(Book) - enables you to add new book entries into the database (virtually). Feel free add anything you want; it will not really add them to the permanent database. New entries will only live through out your session.-->
<wsdl:definitions name="Cart" targetNamespace="http://www.parasoft.com/wsdl/store-02/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:n11="http://www.themindelectric.com/package/webtool.soap.examples.store/" xmlns:n12="http://www.themindelectric.com/package/java.sql/" xmlns:n13="http://www.themindelectric.com/exceptions/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tme="http://www.themindelectric.com/" xmlns:tns="http://www.parasoft.com/wsdl/store-02/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xsd:schema targetNamespace="http://www.themindelectric.com/package/webtool.soap.examples.store/">
      <xsd:import namespace="http://www.themindelectric.com/package/java.sql/"/>
      <xsd:import namespace="http://www.w3.org/2001/XMLSchema"/>
      <xsd:complexType name="Order">
        <xsd:sequence>
          <xsd:element name="item" nillable="true" type="n11:Book"/>
          <xsd:element name="quantity" type="xsd:int"/>
          <xsd:element name="order_number" type="xsd:int"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Book">
        <xsd:complexContent>
          <xsd:extension base="n11:Item">
            <xsd:sequence>
              <xsd:element name="isbn" nillable="true" type="xsd:string"/>
              <xsd:element name="publication_date" nillable="true" type="n12:Date"/>
              <xsd:element name="description" nillable="true" type="xsd:string"/>
              <xsd:element name="authors" nillable="true" type="xsd:ArrayOfstring"/>
              <xsd:element name="publisher" nillable="true" type="xsd:string"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="Item">
        <xsd:sequence>
          <xsd:element name="id" type="xsd:int"/>
          <xsd:element name="title" nillable="true" type="xsd:string"/>
          <xsd:element name="quantity_in_stock" type="xsd:int"/>
          <xsd:element name="price" type="xsd:float"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfBook">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="i" type="n11:Book"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfOrder">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="i" type="n11:Order"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema targetNamespace="http://www.themindelectric.com/package/java.sql/">
      <xsd:complexType name="Date">
        <xsd:simpleContent>
          <xsd:extension base="xsd:dateTime"/>
        </xsd:simpleContent>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema targetNamespace="http://www.w3.org/2001/XMLSchema">
      <xsd:complexType name="ArrayOfstring">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="i" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema targetNamespace="http://www.themindelectric.com/exceptions/">
      <xsd:element name="exception">
        <xsd:complexType/>
      </xsd:element>
    </xsd:schema>
    <xsd:schema elementFormDefault="qualified" targetNamespace="http://www.parasoft.com/wsdl/store-02/">
      <xsd:import namespace="http://www.themindelectric.com/package/webtool.soap.examples.store/"/>
      <xsd:element name="placeOrder">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="itemId" type="xsd:int"/>
            <xsd:element name="quantity" type="xsd:int"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="placeOrderResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Result" type="n11:Order"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="removeOrder">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="orderNumber" type="xsd:int"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="removeOrderResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Result" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getItemByTitle">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="titleKeyword" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getItemByTitleResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Result" type="n11:ArrayOfBook"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getItemById">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="id" type="xsd:int"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getItemByIdResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Result" type="n11:Book"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getPendingOrders">
        <xsd:complexType>
          <xsd:sequence/>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getPendingOrdersResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Result" type="n11:ArrayOfOrder"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="addNewItem">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="book" type="n11:Book"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="addNewItemResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Result" type="n11:Book"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="confirm">
        <xsd:complexType>
          <xsd:sequence/>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="confirmResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Result" type="xsd:boolean"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="placeOrder0In">
    <wsdl:part element="tns:placeOrder" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="exception">
    <wsdl:part name="exception" element="n13:exception"/>
  </wsdl:message>
  <wsdl:message name="placeOrder0Out">
    <wsdl:part element="tns:placeOrderResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="removeOrder1In">
    <wsdl:part element="tns:removeOrder" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="removeOrder1Out">
    <wsdl:part element="tns:removeOrderResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getItemByTitle2In">
    <wsdl:part element="tns:getItemByTitle" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getItemByTitle2Out">
    <wsdl:part element="tns:getItemByTitleResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getItemById3In">
    <wsdl:part element="tns:getItemById" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getItemById3Out">
    <wsdl:part element="tns:getItemByIdResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getPendingOrders4In">
    <wsdl:part element="tns:getPendingOrders" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getPendingOrders4Out">
    <wsdl:part element="tns:getPendingOrdersResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="addNewItem5In">
    <wsdl:part element="tns:addNewItem" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="addNewItem5Out">
    <wsdl:part element="tns:addNewItemResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="confirm6In">
    <wsdl:part element="tns:confirm" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="confirm6Out">
    <wsdl:part element="tns:confirmResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:portType name="ICart">
    <wsdl:operation name="placeOrder" parameterOrder="itemId quantity">
      <wsdl:input message="tns:placeOrder0In" name="placeOrder0In"/>
      <wsdl:output message="tns:placeOrder0Out" name="placeOrder0Out"/>
      <wsdl:fault message="tns:exception" name="exception"/>
    </wsdl:operation>
    <wsdl:operation name="removeOrder" parameterOrder="orderNumber">
      <wsdl:input message="tns:removeOrder1In" name="removeOrder1In"/>
      <wsdl:output message="tns:removeOrder1Out" name="removeOrder1Out"/>
    </wsdl:operation>
    <wsdl:operation name="getItemByTitle" parameterOrder="titleKeyword">
      <wsdl:input message="tns:getItemByTitle2In" name="getItemByTitle2In"/>
      <wsdl:output message="tns:getItemByTitle2Out" name="getItemByTitle2Out"/>
      <wsdl:fault message="tns:exception" name="exception"/>
    </wsdl:operation>
    <wsdl:operation name="getItemById" parameterOrder="id">
      <wsdl:input message="tns:getItemById3In" name="getItemById3In"/>
      <wsdl:output message="tns:getItemById3Out" name="getItemById3Out"/>
      <wsdl:fault message="tns:exception" name="exception"/>
    </wsdl:operation>
    <wsdl:operation name="getPendingOrders">
      <wsdl:input message="tns:getPendingOrders4In" name="getPendingOrders4In"/>
      <wsdl:output message="tns:getPendingOrders4Out" name="getPendingOrders4Out"/>
    </wsdl:operation>
    <wsdl:operation name="addNewItem" parameterOrder="book">
      <wsdl:documentation>Order[] getConfirmedOrders();</wsdl:documentation>
      <wsdl:input message="tns:addNewItem5In" name="addNewItem5In"/>
      <wsdl:output message="tns:addNewItem5Out" name="addNewItem5Out"/>
    </wsdl:operation>
    <wsdl:operation name="confirm">
      <wsdl:input message="tns:confirm6In" name="confirm6In"/>
      <wsdl:output message="tns:confirm6Out" name="confirm6Out"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ICart" type="tns:ICart">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="placeOrder">
      <soap:operation soapAction="placeOrder" style="document"/>
      <wsdl:input name="placeOrder0In">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="placeOrder0Out">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="exception">
        <soap:fault name="exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeOrder">
      <soap:operation soapAction="removeOrder" style="document"/>
      <wsdl:input name="removeOrder1In">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeOrder1Out">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getItemByTitle">
      <soap:operation soapAction="getItemByTitle" style="document"/>
      <wsdl:input name="getItemByTitle2In">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getItemByTitle2Out">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="exception">
        <soap:fault name="exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getItemById">
      <soap:operation soapAction="getItemById" style="document"/>
      <wsdl:input name="getItemById3In">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getItemById3Out">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="exception">
        <soap:fault name="exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPendingOrders">
      <soap:operation soapAction="getPendingOrders" style="document"/>
      <wsdl:input name="getPendingOrders4In">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPendingOrders4Out">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addNewItem">
      <soap:operation soapAction="addNewItem" style="document"/>
      <wsdl:input name="addNewItem5In">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addNewItem5Out">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="confirm">
      <soap:operation soapAction="confirm" style="document"/>
      <wsdl:input name="confirm6In">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="confirm6Out">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="Cart">
    <wsdl:documentation>The Parasoft Book Store service with Basic HTTP authentication</wsdl:documentation>
    <wsdl:port binding="tns:ICart" name="ICart">
      <soap:address location="http://ws1.parasoft.com/glue/store-02"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://ws1.parasoft.com/glue/store-02</con:endpoint></con:endpoints><con:operation id="34ce237b-6831-49e1-b7d1-1c68f6c92aa5" isOneWay="false" action="addNewItem" name="addNewItem" bindingOperationName="addNewItem" type="Request-Response" outputName="addNewItem5Out" inputName="addNewItem5In" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b416dc20-6dcc-4096-b61d-21fb2b354b26" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ws1.parasoft.com/glue/store-02</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:stor="http://www.parasoft.com/wsdl/store-02/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <stor:addNewItem>\r
         <stor:book>\r
            <id>?</id>\r
            <title>?</title>\r
            <quantity_in_stock>?</quantity_in_stock>\r
            <price>?</price>\r
            <isbn>?</isbn>\r
            <publication_date>?</publication_date>\r
            <description>?</description>\r
            <authors>\r
               <!--Zero or more repetitions:-->\r
               <i>?</i>\r
            </authors>\r
            <publisher>?</publisher>\r
         </stor:book>\r
      </stor:addNewItem>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="addNewItem"/></con:call></con:operation><con:operation id="2ea8d87f-bbf9-4e16-8f45-1a10d3af05fa" isOneWay="false" action="confirm" name="confirm" bindingOperationName="confirm" type="Request-Response" outputName="confirm6Out" inputName="confirm6In" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="17cef3e8-e752-4f2a-acff-5ce0268747ea" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ws1.parasoft.com/glue/store-02</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:stor="http://www.parasoft.com/wsdl/store-02/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <stor:confirm/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="confirm"/></con:call></con:operation><con:operation id="4187731e-d4e2-4e2a-b4f5-526cb101bf51" isOneWay="false" action="getItemById" name="getItemById" bindingOperationName="getItemById" type="Request-Response" outputName="getItemById3Out" inputName="getItemById3In" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d7f69503-6cb5-4578-8b24-307409f4bc12" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ws1.parasoft.com/glue/store-02</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:stor="http://www.parasoft.com/wsdl/store-02/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <stor:getItemById>\r
         <stor:id>?</stor:id>\r
      </stor:getItemById>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getItemById"/></con:call></con:operation><con:operation id="a35f3dd1-51a1-43b2-bbe7-c4d8079f03ef" isOneWay="false" action="getItemByTitle" name="getItemByTitle" bindingOperationName="getItemByTitle" type="Request-Response" outputName="getItemByTitle2Out" inputName="getItemByTitle2In" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fcd700e9-f796-48f8-8c3e-6933b171f9eb" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ws1.parasoft.com/glue/store-02</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:stor="http://www.parasoft.com/wsdl/store-02/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <stor:getItemByTitle>\r
         <stor:titleKeyword>?</stor:titleKeyword>\r
      </stor:getItemByTitle>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getItemByTitle"/></con:call></con:operation><con:operation id="0a4d8b00-76e4-4bc7-930d-541a9191ee30" isOneWay="false" action="getPendingOrders" name="getPendingOrders" bindingOperationName="getPendingOrders" type="Request-Response" outputName="getPendingOrders4Out" inputName="getPendingOrders4In" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="be8eebdf-156d-44d8-b7ae-175e4180bfda" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ws1.parasoft.com/glue/store-02</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:stor="http://www.parasoft.com/wsdl/store-02/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <stor:getPendingOrders/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getPendingOrders"/></con:call></con:operation><con:operation id="4154d4b4-e3a5-42e8-9e68-cf013344fcc7" isOneWay="false" action="placeOrder" name="placeOrder" bindingOperationName="placeOrder" type="Request-Response" outputName="placeOrder0Out" inputName="placeOrder0In" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f63b8de8-3df8-49c5-921e-c46e9c6cf5ef" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ws1.parasoft.com/glue/store-02</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:stor="http://www.parasoft.com/wsdl/store-02/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <stor:placeOrder>\r
         <stor:itemId>?</stor:itemId>\r
         <stor:quantity>?</stor:quantity>\r
      </stor:placeOrder>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="placeOrder"/></con:call></con:operation><con:operation id="5d9902c8-cd78-4bd0-a30c-bf09bf50d3ed" isOneWay="false" action="removeOrder" name="removeOrder" bindingOperationName="removeOrder" type="Request-Response" outputName="removeOrder1Out" inputName="removeOrder1In" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="17614d84-1f32-4812-a81e-3918fcf2cd28" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ws1.parasoft.com/glue/store-02</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:stor="http://www.parasoft.com/wsdl/store-02/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <stor:removeOrder>\r
         <stor:orderNumber>?</stor:orderNumber>\r
      </stor:removeOrder>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="removeOrder"/></con:call></con:operation></con:interface><con:testSuite id="55ec3512-a147-4529-8728-134accfc3465" name="HttpBasicAuthentication"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e5772de6-ca8c-4bbb-8cd1-fd2f73e3da59" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="HTTPBasicAuthentcation" searchProperties="true"><con:settings/><con:testStep type="request" name="HTTPBasic" id="a3eba031-17d8-4d2c-b790-3aa057d3de71"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ICart</con:interface><con:operation>getItemByTitle</con:operation><con:request name="HTTPBasic" id="5b48cb96-beed-4d28-b22b-cd5faec622de"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ws1.parasoft.com/glue/store-02</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:stor="http://www.parasoft.com/wsdl/store-02/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <stor:getItemByTitle>\r
         <stor:titleKeyword>a</stor:titleKeyword>\r
      </stor:getItemByTitle>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="dfbd67b3-7693-4a01-a142-6d4292757e86"/><con:credentials><con:username>soaptest</con:username><con:password>soaptest</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/></con:soapui-project>