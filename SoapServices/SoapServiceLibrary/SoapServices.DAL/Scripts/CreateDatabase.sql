DROP PROCEDURE IF EXISTS `_idempotent_script`;

DELIMITER //

CREATE PROCEDURE `_idempotent_script`()
BEGIN
  DECLARE CurrentMigration TEXT;

  IF EXISTS(SELECT 1 FROM information_schema.tables 
  WHERE table_name = '__MigrationHistory' 
  AND table_schema = DATABASE()) THEN 
    SET CurrentMigration = (SELECT
`Project1`.`MigrationId`
FROM `__MigrationHistory` AS `Project1`
 WHERE `Project1`.`ContextKey` = 'SoapServices.DAL.Migrations.Configuration'
 ORDER BY 
`Project1`.`MigrationId` DESC LIMIT 1);
  END IF;

  IF CurrentMigration IS NULL THEN
    SET CurrentMigration = '0';
  END IF;

  IF CurrentMigration < '201601050632479_First' THEN 
create table `Address` (`Id` int not null  auto_increment ,`StreetLine1` longtext,`StreetLine2` longtext,`City` longtext,`State` longtext,`Country` longtext,primary key ( `Id`) ) engine=InnoDb auto_increment=0;
create table `ContactInfo` (`Id` int not null  auto_increment ,`PrimaryContactNumber` longtext not null ,`SecondaryContactNumber` longtext,`EmailId` longtext not null ,`SkypeId` longtext,`LinkedInId` longtext,`FacebookId` longtext,primary key ( `Id`) ) engine=InnoDb auto_increment=0;
create table `Course` (`CourseId` int not null  auto_increment ,`CourseName` longtext,`CourseContents` longtext,primary key ( `CourseId`) ) engine=InnoDb auto_increment=0;
create table `Student` (`Id` int not null  auto_increment ,`Name` longtext not null ,`FathersName` longtext not null ,`ContactId` int not null ,`AddressId` int not null ,primary key ( `Id`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_ContactId` on `Student` (`ContactId` DESC) using HASH;
CREATE index  `IX_AddressId` on `Student` (`AddressId` DESC) using HASH;
alter table `Student` add constraint `FK_Student_Address_AddressId`  foreign key (`AddressId`) references `Address` ( `Id`)  on update cascade on delete cascade ;
alter table `Student` add constraint `FK_Student_ContactInfo_ContactId`  foreign key (`ContactId`) references `ContactInfo` ( `Id`)  on update cascade on delete cascade ;
create table `__MigrationHistory` (`MigrationId` nvarchar(150)  not null ,`ContextKey` nvarchar(300)  not null ,`Model` longblob not null ,`ProductVersion` nvarchar(32)  not null ,primary key ( `MigrationId`,`ContextKey`) ) engine=InnoDb auto_increment=0;
INSERT INTO `__MigrationHistory`(
`MigrationId`, 
`ContextKey`, 
`Model`, 
`ProductVersion`) VALUES (
'201601050632479_First', 
'SoapServices.DAL.Migrations.Configuration', 
0x
'6.1.3-40302');
  END IF;

END //

DELIMITER ;

CALL `_idempotent_script`();

DROP PROCEDURE IF EXISTS `_idempotent_script`;

